import streamlit as st
import pandas as pd
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import TfidfVectorizer

# ğŸ”¹ CrÃ©ation du dataset avec produits et descriptions
data = pd.DataFrame({
    'Produit': ['Chaussures Sport', 'Baskets Running', 'Sac de Sport', 'Montre Fitness', 'Bouteille dâ€™eau', 'Casque Audio'],
    'Description': [
        'Chaussures confortables pour le sport et la marche',
        'Baskets lÃ©gÃ¨res adaptÃ©es au running et au sport',
        'Sac pratique pour transporter ses affaires de sport',
        'Montre connectÃ©e pour le suivi dâ€™activitÃ© sportive',
        'Bouteille isotherme idÃ©ale pour le sport et la randonnÃ©e',
        'Casque sans fil avec rÃ©duction de bruit pour la musique'
    ]
})

# ğŸ”¹ Transformer les descriptions en vecteurs numÃ©riques
vectorizer = TfidfVectorizer()
tfidf_matrix = vectorizer.fit_transform(data['Description'])

# ğŸ”¹ Calculer la similaritÃ© cosinus entre les produits
similarity_matrix = cosine_similarity(tfidf_matrix, tfidf_matrix)

# ğŸ”¹ Fonction de recommandation
def recommander_produits(nom_produit, data, similarity_matrix, top_n=3):
    idx = data[data['Produit'] == nom_produit].index[0]
    scores = list(enumerate(similarity_matrix[idx]))
    scores = sorted(scores, key=lambda x: x[1], reverse=True)[1:top_n+1]
    
    recommandations = [data['Produit'][i[0]] for i in scores]
    return recommandations

# ğŸ”¹ Interface utilisateur avec Streamlit
st.title("ğŸ›’ AmÃ©liorez vos ventes avec des recommandations intelligentes !")
st.write("SÃ©lectionnez un produit, et dÃ©couvrez ce que nous vous recommandons.")

# ğŸ”¹ SÃ©lecteur de produit
produit_selectionne = st.selectbox("Choisissez un produit :", data['Produit'])

# ğŸ”¹ Afficher les recommandations
if produit_selectionne:
    recommandations = recommander_produits(produit_selectionne, data, similarity_matrix)
    st.success(f"Si vous aimez **{produit_selectionne}**, vous pourriez aussi aimer :")
    for rec in recommandations:
        st.write(f"- {rec}")
